package queue;

import java.util.LinkedList;
/**
 * A Linked-List based Queue
 * Is concurrent (i.e., can modify front and back in parallel)
 *
 * @param <T>
 */
public class ConcurrentQueue<T> implements IQueue<T>{

	
	private LinkedList<T> queue;
	
	public ConcurrentQueue(){
		queue = new LinkedList<T>();
	}
	
	/**
	 * Return the size by invoking the size of the list
	 */
	public int size() { 
		return queue.size();
	}
	

	/**
	 * Simply add the data to the tail of the linked list
	 */
	public void enqueue(T data) {
		queue.addLast(data);
	}
	
	/**
	 * Simply remove data from the head of the list
	 */
	public T dequeue(){	
		return queue.removeFirst();
	}
	
	
}
